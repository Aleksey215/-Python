# ***** Практические примеры с условным оператором *****
print("Использование логических операторов и операторов сравнения в условном операторе")
# Условие задачи: Записать условие проверки целого числа А, является ли оно кратным двум или трем.
A = int(input("Enter A: "))
if (A % 2 == 0) or (A % 3 == 0):
    print("А кратно 2 или 3")
else:
    print("А не кратно ни 2 ни 3")

# При работе с условными операторами возникают некоторые моменты, которые могут содержать избыточные проверки.
# Например:
# # Хорошо
# if not seq:
# if seq:
#
# # Плохо
# if len(seq)
# if not len(seq)
#
# # Примеры
#
# if pozitive_num:  # нет смысла проверять len(pozitive_num)
#    # если список не пустой печатаем его
#    print("Список положительных чисел равен: ", pozitive_num)
# else:
#    # печатаем, если список оказался пустым
#    print("Список положительных чисел пустой")
#
#
# if not password:  # password строка содержащая пароль, введенный пользователем
#    print("Вы забыли ввести пароль! Повторите попытку ещё раз")

# Не сравнивайте логические типы с True и False с помощью ==, иначе получается «масло масляное».
# Хорошо
# if greeting:
#
# # Плохо
# if greeting == True:
#
# # Совсем не правильно
# if greeting is True:
print()

print("Использование операторов сравнения с условным оператором")
# Условие задачи: Написать программу для определения, является ли данное время суток утром,
# и вывести соответствующее сообщение.
# Утром считается временной промежуток с 6 включительно и до 12 часов не включительно.
hour = int(input("Enter hour: "))
if 6 <= hour < 12:
    print("Утро")
else:
    print("Не утро!")
print()
# Задание на самопроверку.
#
# Иногда использование вложенных операторов не всегда удобно.
# Вам дан код начинающего программиста, который не знает логические операторы.
# Он написал условие проверки принадлежности точки к координатной плоскости.
x = 1
y = 2
if x > 0:
    if y > 0:               # x > 0, y > 0
         print("Первая четверть")
    else:                   # x > 0, y < 0
         print("Четвертая четверть")
else:
    if y > 0:               # x < 0, y > 0
         print("Вторая четверть")
    else:                   # x < 0, y < 0
         print("Третья четверть")
# Перепишите код, представленный ниже, с помощью четырех отдельных условных операторов if:
if x > 0 and y > 0:
    print("Первая четверть")
if x > 0 and y < 0:
    print("Четвертая четверть")
if x < 0 and y > 0:
    print("Вторая четверть")
if x < 0 and y < 0:
    print("Третья четверть")
print()

print("Конструкция if-elif-else")
# Иногда необходимо сравнивать значения по цепочке.
# И в случае выполнения какого-либо все оставшиеся условия проверять не нужно.
# В этом случае на помощь приходит конструкция if-elif-else. Вот пример:
a = 12
if a == 10:
    print(" a = 10")
elif a < 10:
    print("a < 10")
else:
    print("a > 10")
# К условному оператору if-else добавляется условие elif, которое можно интерпретировать как «а если …».
# Таких вложенных elif может быть сколько угодно много, блок else может быть только один,
# но также является необязательным.
print()

# Пример 3. Использование оператора if-elif-else.
print("Пример 3. Использование оператора if-elif-else.")
# Условие задачи:
# Ввести с клавиатуры номер месяца.
# Определить сезон в зависимости от номера месяца и вывести сообщение:
#         «Весна» для 3, 4, 5 месяцев;
#         «Лето» для 6, 7, 8 месяцев;
#         «Осень» для 9, 10, 11 месяцев;
#         «Зима» для 12, 1, 2 месяцев.
num_of_month = int(input("Enter number of month: "))
spring = [3, 4, 5]
summer = [6, 7, 8]
autumn = [9, 10, 11]
winter = [12, 1, 2]
if num_of_month in spring:
    print("Spring")
elif num_of_month in summer:
    print("Summer")
elif num_of_month in autumn:
    print("Autumn")
elif num_of_month in winter:
    print("Winter")
print()

# Тернарный условный оператор
print("Тернарный условный оператор")
# Рассмотрим такой пример для сравнения двух чисел и получения большего из них:
a = 42
b = 41
if a > b:
    result = a
else:
    result = b
# Когда несколько строчек кода написаны для выполнения простого действия,
# можно и нужно, по возможности исправить код, например условия выше можно заменить
# тернарным условным оператором:
result = a if a > b else b
print()

print("Самостоятельная работа")
print("Задание 3.4.5")
# Записать условие, которое является истинным, когда только одно из чисел А, В и С меньше 45.
# Иногда проще записать все условия и не пытаться упростить их.
a = int(input("Enter A: "))
b = int(input("Enter B: "))
c = int(input("Enter C: "))
if (a < 45) and (b >= 45) and (c >= 45):
    print("True")
elif (a >= 45) and (b < 45) and (c >= 45):
    print("True")
elif (a >= 45) and (b >= 45) and (c < 45):
    print("True")
else:
    print("False")
# Альтернативное решение:
# A = int(input('Введите первое число\n'))
# B = int(input('Введите второе число\n'))
# C = int(input('Введите третье число\n'))
#
# if ((A < 45) and (B >= 45) and (C >=45)) or \
#     ((A >= 45) and (B < 45) and (C >=45)) or \
#     ((A >= 45) and (B >= 45) and (C < 45)):
#     print('Есть число меньше 45 и только одно')
# else:
#     print('Числа меньше 45 нет или их несколько')
print()

print("Задание 3.4.6")
# Записать логические выражения, которые определяют, что число А не принадлежит интервалу от -10 до -1
# или интервалу от 2 до 15.
a = int(input("Введите A: "))
if not(-10 <= a <= -1 or 2 <= a <= 15):
    print("Не принадлежит")
else:
    print("Принадлежит")
print()

print("Задание 3.4.7")
# Дано двузначное число.
# Определить: входит ли в него цифра 5.
# Попробуйте решить её с использованием целочисленного деления и деления с остатком.
n = int(input("Введите двузначное число: "))
if n // 10 == 5 or n % 10 == 5:
    print("цифра 5 входит в это число")
else:
    print("5 не входит в это число")
# Альтернативное решение:
# n = 15
# first_digit = n // 10
# second_digit = n % 10
#
# print((first_digit == 5) or (second_digit == 5))
print()

print("Задание 3.4.8")
# Проверить, все ли элементы в списке являются уникальными.
list_1 = list(map(int, input("Введите элементы списка через пробел: ").split()))
set_1 = set(list_1)
if len(list_1) == len(set_1):
    print("Все элементы уникальны!")
else:
    print("Не все элементы уникальны")
# Альтернатива:
# list_1 = list(map(int, input("Введите элементы списка через пробел: ").split()))
# print(len(list_1) == len(set(list_1)))
print()

print("Задание 3.4.9")
# Дано натуральное восьмизначное число.
# Выясните, является ли оно палиндромом (читается одинаково слева направо и справа налево). 11222211
num = int(input("Введите восьмизначное число: "))
num_str = str(num)
list_nums = list(num_str)
if list_nums[0] == list_nums[-1] and list_nums[1] == list_nums[-2] \
    and list_nums[2] == list_nums[-3] and list_nums[3] == list_nums[-4]:
    print("Число - Палиндром!")
else:
    print("Число не является палиндромом!")
# Решение от SkillFactory:
# print(str(num) == str(num)[::-1])
