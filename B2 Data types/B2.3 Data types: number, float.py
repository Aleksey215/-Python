# ***** Типы данных: число, число с плавающей точкой *****

# *** Целые числа ***
print("Целые числа")
# Множество целых чисел представлено натуральными числами (1, 2, 3, 4 и т. д.),
# противоположными им (-1, - 2, - 3 и т. д.), а также нулём.
# Операция деления для целых чисел имеет свои особенности.
print("Обычное деление")
a = 5 / 2
print(a)
# Результатом такого деления стало число с плавающей точкой.
# Для получения целого числа как результата деления
# используется две специфические операции — целочисленное деление и взятие остатка от деления.

# Операция целочисленного деления // возвращает целую часть получившегося результата,
# отбрасывая всю дробную часть.
print("Целочисленное деление")
print(1 // 3)
print(3 // 3)
print(29 // 3)  # происходит не округление, а именно отбрасывание дробной части

# О величине самой дробной части или, если быть точным, об остатке от деления,
# можно судить по результату операции %.
# Остаток от деления показывает, на сколько делимое больше ближайшего числа, которое делится нацело:
print("Остаток от деления")
print(1 % 3)
print(3 % 3)
print(29 % 3)

# *** Числа с плавающей точкой ***
print("Числа с плавающей точкой")
# Точка перемещается влево или вправо по разрядам числа, и поэтому её называют плавающей.
# А если подходить к этому ещё более формально, можно сказать,
# что числа с плавающей точкой обладают точной относительной точностью, но изменяющейся абсолютной.
# Иначе говоря, точность числа содержится в мантиссе (значащих цифрах), а порядок числа становится не важен.

# *** Преобразование типов ***
print("Преобразование типов")
print(5 / 2)
# В данном выражении Python произвел неявное преобразование типов.
# Иными словами, во время вычисления оказалось недостаточным использование одних только целых чисел,
# и они были преобразованы в числа типа float.

# Во время вычисления выражения также происходит неявное преобразование типов:
print(3.14 * 2)
# В данном выражении мы умножаем число с плавающей точкой на целое число,
# которое во время выполнения автоматически преобразуется в число с плавающей точкой.

# При вычислении различных выражений Python применяет следующее правило:
# если в выражении встречается число с плавающей точкой или таковое получается в результате вычисления
# подвыражений, то результат будет представлен типом float.
# Такое правило существует для избежания потери данных, содержащихся в дробной части.

# Существует также возможность явно преобразовать один тип в другой — приведение типов.
# Это осуществляется с помощью конструкции: t(var)
# В данном выражении var — это объект, который подлежит преобразованию,
# а t — это тип (int или float), к которому необходимо преобразовать.
print(float(1))
print(int(3.14))
print(int(2.8))
# приведение float к int только отбрасывает дробную часть.
# для корректного округления чисел с плавающей точкой по всем правилам
# необходимо пользоваться функцией round():
print(round(1.00 + 0.01 - 3.01))
# С помощью этой функции можно округлять не только до целого числа,
# но и до желаемого количества знаков после точки:
print(3.14/2)
print(round(3.14 / 2, 1))  # второй аргумент - желаемое количество знаков

